snippet foreachel
  <dspel:droplet name="/atg/dynamo/droplet/ForEach">
    <dspel:param name="array" bean="${1}" />
    <dspel:setvalue param="${2}" paramvalue="element"/>
    <dspel:oparam name="empty">
    </dspel:oparam>
    <dspel:oparam name="outputStart">
    </dspel:oparam>
    <dspel:oparam name="output">
        <dspel:valueof param="${3}"/>
    </dspel:oparam> <%-- output param --%>
    <dspel:oparam name="outputEnd">
    </dspel:oparam>
  </dspel:droplet>
snippet foreach
  <dspel:droplet name="/atg/dynamo/droplet/ForEach">
    <dspel:param name="array" bean="${1}" />
    <dspel:setvalue param="${2}" paramvalue="element"/>
    <dspel:oparam name="empty">
    </dspel:oparam>
    <dspel:oparam name="outputStart">
    </dspel:oparam>
    <dspel:oparam name="output">
        <dspel:valueof param="${3}"/>
    </dspel:oparam> <%-- output param --%>
    <dspel:oparam name="outputEnd">
    </dspel:oparam>
  </dspel:droplet>
snippet taglib
  <%@ taglib uri="/dspTaglib" prefix="dsp"%>
  <%@ taglib uri="c" prefix="c"%>
  <%@ taglib uri="fmt" prefix="fmt" %>
snippet import
  <dspel:importbean var="${1}" bean="${2}"/>
snippet getvalueof
  <dspel:getvalueof var="${1}" bean="${2}" />
snippet if
  <c:if test='${!empty ${1}/something eq "somethingelse"}'>
    ${2}
  </c:if>
snippet choose
  <c:choose>
    <c:when test="${1}${planId eq null}">
      ${2}<c:set var="planId" value="" />
    </c:when>
    <c:otherwise>${3}</c:otherwise>
  </c:choose>
snippet cout
  <c:out value="${${1}}"/>
snippet page
  <%@ page contentType="text/html; charset=UTF-8"%>
snippet valueof
  <dspel:valueof value="${${1}}"/>
snippet rql
  <dspel:importbean bean="/atg/dynamo/droplet/RQLQueryForEach"/>
  <dspel:droplet name="RQLQueryForEach">
  <dspel:param name="queryRQL" value='${1}'/>
    <dspel:param name="repository"
      value="${2}"/>
    <dspel:param name="itemDescriptor" value="${3}"/>
    <dspel:oparam name="output">
      <dspel:tomap var="pItem" param="element"/>
      ${pItem}<br>
    </dspel:oparam>
  </dspel:droplet>
snippet stringcutter
  <%@ taglib uri="/philips" prefix="philips" %>
  <philips:stringCutter inputString="${${1}}" inputLength="${2}" cutOnSpace="false" lenient="false">
    <c:out value="${resultString}"/>
  </philips:stringCutter>
snippet pageitem
  <dspel:droplet name="/philips/droplet/PageItemLookupDroplet">
    <dspel:param name="repositoryItem" bean="Profile.catalogRepo"/>
    <dspel:param name="templateType" value="${1}"/>
    <dspel:param name="elementName"  value="pageItem"/>
    <dspel:oparam name="output">
      <dspel:droplet name="/atg/dynamo/droplet/IsNull">
        <dspel:param name="value" param="pageItem.targetUrl"/>
        <dspel:oparam name="true"></dspel:oparam>
        <dspel:oparam name="false">
          <%-- We finally have a pageItem of template type ContactUsSteps with a target url, so we use it --%>
          <dspel:getvalueof var="targetUrl" param="pageItem.targetUrl" scope="request"></dspel:getvalueof>
          <c:set var="contactUsFragment" value="${targetUrl}"></c:set>
        </dspel:oparam>
      </dspel:droplet>
    </dspel:oparam>
    <dspel:oparam name="empty"></dspel:oparam>
    <dspel:oparam name="error"></dspel:oparam>
  </dspel:droplet>
snippet isnull
  <dspel:importbean bean="/atg/dynamo/droplet/IsNull"/>
  <dspel:droplet name="IsNull">
    <dspel:param value="${${1}}" name="value"/>
      <dspel:oparam name="false">
        ${2}
      </dspel:oparam>
  </dspel:droplet>
snippet include
  <dspel:include page="${1}">
    <dspel:param name="${2}" value="${3}" />
    <dspel:param name="${4}" bean="${5}" />
  </dspel:include>
snippet img
  <img src="${1} alt="${2}" />

